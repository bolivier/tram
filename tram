#!/usr/bin/env bb

(require '[babashka.fs :as fs])
(require '[babashka.process :as p])
(require '[tram-cli.nrepl-client :as client])
(require '[zprint.core :refer [zprint-file-str]])
(require '[clojure.string :as str])
(require '[tram-cli.daemon-management
           :refer
           [start-daemon kill-daemon restart-daemon accepting?]])

(defn -main [& args]
  (let [cmd (first args)]
    (case cmd
      "daemon:start" (start-daemon)
      "daemon:kill" (kill-daemon)
      "daemon:restart" (restart-daemon)
      "daemon:status" (if (accepting?)
                        (println "Running")
                        (println "Stopped"))
      "new" (println "not yet implemented")
      "test:watch"
      (if (fs/exists? "bin/kaocha")
        (do (println "Watching tests with bin/kaocha")
            (p/shell {:continue true}
                     "bin/kaocha --watch"))
        (do
          (println
            "bin/kaocha not found, invoking clojure command `clojure -X:test:watch`")
          (p/shell {:continue true}
                   "clojure -X:test:watch")))

      "test"
      (if (fs/exists? "bin/kaocha")
        (do (println "Running tests with bin/kaocha")
            (p/shell {:continue true}
                     "bin/kaocha"))
        (do
          (println
            "bin/kaocha not found, invoking clojure command `clojure -X:test`")
          (p/shell {:continue true}
                   "clojure -X:test")))

      (client/send {:op   :tram/op
                    :cmd  cmd
                    :args (rest args)}))))

(apply -main *command-line-args*)
